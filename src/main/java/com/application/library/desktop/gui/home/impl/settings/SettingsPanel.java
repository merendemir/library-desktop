package com.application.library.desktop.gui.home.impl.settings;

import com.application.library.desktop.constants.TitleConstants;
import com.application.library.desktop.gui.home.impl.panel.main.IMainPanel;
import com.application.library.desktop.gui.home.impl.settings.impl.ITabbedPane;
import com.application.library.desktop.gui.home.impl.settings.impl.LateFeeSettingsTabPanel;
import com.application.library.desktop.gui.home.impl.settings.impl.LendDaySettingsTabPanel;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.springframework.stereotype.Service;

import javax.swing.*;
import java.awt.*;

@Service
public class SettingsPanel extends JPanel implements IMainPanel {


    public SettingsPanel(LendDaySettingsTabPanel lendDaySettingsTabPanel, LateFeeSettingsTabPanel lateFeeSettingsTabPanel) {
        setLayout(new BorderLayout());
        add(contentPane, BorderLayout.CENTER);

        tabbedPane.addTab(TitleConstants.LEND_DAY_SETTINGS_TAB, lendDaySettingsTabPanel);
        tabbedPane.addTab(TitleConstants.LATE_FEE_SETTINGS_TAB, lateFeeSettingsTabPanel);

        setComponentsActions();
    }

    private void setComponentsActions() {
        tabbedPane.addChangeListener(e -> {
            if (tabbedPane.getSelectedComponent() == null) return;

            ITabbedPane selectedTabbedPane = (ITabbedPane) tabbedPane.getSelectedComponent();
            selectedTabbedPane.selected();
        });

        buttonOK.addActionListener(e -> {
            ITabbedPane selectedComponent = (ITabbedPane) tabbedPane.getSelectedComponent();
            selectedComponent.onOK();
        });

    }

    //COMPONENTS
    private JPanel contentPane;
    private JTabbedPane tabbedPane;
    private JButton buttonOK;

    @Override
    public void selected() {
        tabbedPane.setSelectedIndex(-1);
        tabbedPane.setSelectedIndex(0);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane = new JTabbedPane();
        tabbedPane.setTabLayoutPolicy(1);
        tabbedPane.setTabPlacement(1);
        contentPane.add(tabbedPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonOK = new JButton();
        buttonOK.setText("Save");
        panel2.add(buttonOK, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPane.add(spacer2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
