package com.application.library.desktop.gui.home.impl.shelf;

import com.application.library.desktop.gui.specification.PaginationPanel;
import com.application.library.desktop.gui.table.CustomDataTable;
import com.application.library.desktop.request.view.shelf.ShelfDTO;
import com.application.library.desktop.supplier.TaskSupplier;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class ShowShelvesPanel extends JPanel {

    String[] columnNames = {"id", "X", "Name", "capacity", "Available Capacity"};
    private final CustomDataTable shelvesDataTable = new CustomDataTable(columnNames, 0);

    private TaskSupplier updateShelvesDataTableTaskSupplier;

    private final PaginationPanel paginationPanel = new PaginationPanel(this::getUpdateShelvesDataTableTaskSupplier);

    protected ShowShelvesPanel() {
        $$$setupUI$$$();
        setLayout(new BorderLayout());
        add(contentPane, BorderLayout.CENTER);
    }

    public PaginationPanel getPaginationPanel() {
        return paginationPanel;
    }

    public void addRow(ShelfDTO shelfDTO) {
        shelvesDataTable.addRow(convertBaseShelfDto(shelfDTO));
    }

    public void removeAllRows() {
        shelvesDataTable.removeAllData();
    }

    private String[] convertBaseShelfDto(ShelfDTO shelfDTO) {
        return new String[]{
                String.valueOf(shelfDTO.getId()),
                String.valueOf(shelvesDataTable.getRowCount() + 1),
                shelfDTO.getName(),
                String.valueOf(shelfDTO.getCapacity()),
                String.valueOf(shelfDTO.getAvailableCapacity()),
        };
    }

    public void selected() {
        if (updateShelvesDataTableTaskSupplier == null) return;
        updateShelvesDataTableTaskSupplier.run();
    }

    protected void setUpdateShelvesDataTableTaskSupplier(TaskSupplier updateShelvesDataTableTaskSupplier) {
        this.updateShelvesDataTableTaskSupplier = updateShelvesDataTableTaskSupplier;
    }

    public CustomDataTable getShelvesDataTable() {
        return shelvesDataTable;
    }

    public ShelfDTO getSelectedShelf() {
        ShelfDTO shelfDTO = new ShelfDTO();
        shelfDTO.setId(Long.parseLong(shelvesDataTable.getSelectedRowId()));
        shelfDTO.setName(shelvesDataTable.getValueAt(shelvesDataTable.getSelectedRow(), 2).toString());
        shelfDTO.setCapacity(Integer.parseInt(shelvesDataTable.getValueAt(shelvesDataTable.getSelectedRow(), 3).toString()));

        return shelfDTO;
    }

    public void showPaginationPanel(boolean show) {
        paginationPanelGUI.setVisible(show);
    }

    private void getUpdateShelvesDataTableTaskSupplier() {
        this.updateShelvesDataTableTaskSupplier.run();
    }

    //COMPONENTS
    private JPanel contentPane;
    private JPanel paginationPanelGUI;
    private JTable shelvesTableGUI;

    private void createUIComponents() {
        shelvesTableGUI = shelvesDataTable;
        paginationPanelGUI = paginationPanel;
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(paginationPanelGUI, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        contentPane.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(shelvesTableGUI);
        final Spacer spacer1 = new Spacer();
        contentPane.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
