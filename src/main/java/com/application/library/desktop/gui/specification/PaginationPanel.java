package com.application.library.desktop.gui.specification;

import com.application.library.desktop.supplier.Supplier;
import com.application.library.desktop.supplier.TaskSupplier;
import com.application.library.desktop.utils.pagination.PaginationResponseDto;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class PaginationPanel extends JPanel {

    private Integer currentPage = 0;
    private Integer totalPages = 0;

    private final TaskSupplier taskSupplier;

    public PaginationPanel(TaskSupplier taskSupplier) {
        this.taskSupplier = taskSupplier;

        setLayout(new BorderLayout());
        add(contentPane, BorderLayout.CENTER);

        pageElementSizeComboBox.setModel(new DefaultComboBoxModel<>(new Integer[]{10, 25, 50, 100}));
        pageElementSizeComboBox.setSelectedIndex(0);

        setComponentActions();
    }

    private void setComponentActions() {
        nextPageButton.addActionListener(e -> {
            currentPage = currentPage + 1;
            Supplier.run(taskSupplier);
        });

        beforePageButton.addActionListener(e -> {
            currentPage = currentPage - 1;
            Supplier.run(taskSupplier);
        });

        firstPageButton.addActionListener(e -> {
            currentPage = 0;
            Supplier.run(taskSupplier);
        });

        lastPageButton.addActionListener(e -> {
            currentPage = totalPages - 1;
            Supplier.run(taskSupplier);
        });

        pageElementSizeComboBox.addActionListener(e -> {
            currentPage = 0;
            Supplier.run(taskSupplier);
        });
    }

    private Integer getPageElementSize() {
        return pageElementSizeComboBox.getItemAt(pageElementSizeComboBox.getSelectedIndex());
    }

    public Map<String, String> getPaginationData() {
        return new HashMap<>(Map.of("page", String.valueOf(currentPage), "size", getPageElementSize().toString()));
    }

    public void clearPanel() {
        currentPage = 0;
    }

    public void fillPageDetails(PaginationResponseDto responseDto) {
        this.currentPage = responseDto.getPageable().getPageNumber();
        this.totalPages = responseDto.getTotalPages();
        int pageNumber = currentPage + 1;
        pageDetailsLabel.setText("Page " + pageNumber + " of " + responseDto.getTotalPages() + " (" + responseDto.getTotalElements() + " elements)");


        firstPageButton.setEnabled(!responseDto.isFirst());
        beforePageButton.setEnabled(!responseDto.isFirst());

        nextPageButton.setEnabled(!responseDto.isLast());
        lastPageButton.setEnabled(!responseDto.isLast());
    }

    // COMPONENTS
    private JButton firstPageButton;
    private JButton beforePageButton;
    private JButton nextPageButton;
    private JButton lastPageButton;
    private JComboBox<Integer> pageElementSizeComboBox;
    private JLabel pageDetailsLabel;
    private JPanel contentPane;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 6, new Insets(0, 0, 0, 0), -1, -1));
        firstPageButton = new JButton();
        firstPageButton.setIcon(new ImageIcon(getClass().getResource("/icons/first.png")));
        firstPageButton.setText("");
        contentPane.add(firstPageButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        beforePageButton = new JButton();
        beforePageButton.setIcon(new ImageIcon(getClass().getResource("/icons/before.png")));
        beforePageButton.setText("");
        contentPane.add(beforePageButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pageDetailsLabel = new JLabel();
        pageDetailsLabel.setText("Label");
        contentPane.add(pageDetailsLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nextPageButton = new JButton();
        nextPageButton.setIcon(new ImageIcon(getClass().getResource("/icons/next.png")));
        nextPageButton.setText("");
        contentPane.add(nextPageButton, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lastPageButton = new JButton();
        lastPageButton.setIcon(new ImageIcon(getClass().getResource("/icons/last.png")));
        lastPageButton.setText("");
        contentPane.add(lastPageButton, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pageElementSizeComboBox = new JComboBox();
        contentPane.add(pageElementSizeComboBox, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
