package com.application.library.desktop.gui.home.impl.shelf.menu.dialog;

import com.application.library.desktop.constants.MessageConstants;
import com.application.library.desktop.constants.TitleConstants;
import com.application.library.desktop.core.BaseDialog;
import com.application.library.desktop.enumerations.NotificationType;
import com.application.library.desktop.gui.home.impl.shelf.SaveShelfPanel;
import com.application.library.desktop.gui.home.impl.shelf.ShelvesOperationPanel;
import com.application.library.desktop.gui.home.impl.shelf.ShelvesPanelCreateService;
import com.application.library.desktop.listener.event.NotificationEvent;
import com.application.library.desktop.listener.event.UpdatePanelDataEvent;
import com.application.library.desktop.request.dto.SaveShelfRequestDto;
import com.application.library.desktop.service.HttpRequestService;
import com.application.library.desktop.utils.ApplicationContextHelper;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.stereotype.Service;

import javax.swing.*;
import java.awt.*;

@Service
public class UpdateShelfDialog extends BaseDialog {

    private Long shelfId;

    private final SaveShelfPanel saveShelfPanel;
    private final ApplicationContextHelper applicationContextHelper;
    private final HttpRequestService httpRequestService;
    private final ApplicationEventPublisher applicationEventPublisher;

    public UpdateShelfDialog(ShelvesPanelCreateService shelvesPanelCreateService, ApplicationContextHelper applicationContextHelper, HttpRequestService httpRequestService, ApplicationEventPublisher applicationEventPublisher) {
        this.saveShelfPanel = shelvesPanelCreateService.createNewSaveShelfPanel(this::onSaveShelf);

        $$$setupUI$$$();
        this.applicationContextHelper = applicationContextHelper;
        this.httpRequestService = httpRequestService;
        this.applicationEventPublisher = applicationEventPublisher;

        setContentPane(contentPane);
        setModal(true);
        setTitle(TitleConstants.UPDATE_SHELF);

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public void showDialog(Long shelfId, String shelfName, Integer capacity) {
        this.shelfId = shelfId;
        saveShelfPanel.setShelfName(shelfName);
        saveShelfPanel.setCapacity(capacity);

        setSize(new Dimension(350, 125));
        setLocationRelativeTo(applicationContextHelper.getCurrentFrame());
        setResizable(false);
        setVisible(true);
    }

    //COMPONENTS
    private JPanel contentPane;

    private void createUIComponents() {
        contentPane = saveShelfPanel;
    }

    private void onSaveShelf() {
        SaveShelfRequestDto saveShelfRequestDto = new SaveShelfRequestDto();
        saveShelfRequestDto.setName(saveShelfPanel.getShelfName());
        saveShelfRequestDto.setCapacity(saveShelfPanel.getCapacity());
        Long id = httpRequestService.updateShelf(shelfId, saveShelfRequestDto);

        if (id != null) {
            applicationEventPublisher.publishEvent(new UpdatePanelDataEvent(this, ShelvesOperationPanel.class));            applicationEventPublisher.publishEvent(new NotificationEvent(this, MessageConstants.SHELF_UPDATE_SUCCESS, NotificationType.SUCCESS));
            dispose();
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
