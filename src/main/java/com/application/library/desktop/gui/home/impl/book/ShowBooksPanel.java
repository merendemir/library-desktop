package com.application.library.desktop.gui.home.impl.book;

import com.application.library.desktop.gui.home.impl.panel.main.IMainPanel;
import com.application.library.desktop.gui.specification.PaginationPanel;
import com.application.library.desktop.gui.table.CustomDataTable;
import com.application.library.desktop.request.view.book.BookDTO;
import com.application.library.desktop.supplier.TaskSupplier;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class ShowBooksPanel extends JPanel implements IMainPanel {

    private Long shelfId;

    String[] columnNames = {"id", "X", "Name", "Author", "isbn", "Page Count", "Publisher", "Total Count", "Available Count", "Language", "Description"};
    private final CustomDataTable booksDataTable = new CustomDataTable(columnNames, 0);

    private TaskSupplier updateBooksDataTableTaskSupplier;

    private final PaginationPanel paginationPanel = new PaginationPanel(this::getUpdateBooksDataTableTaskSupplier);

    protected ShowBooksPanel() {
        $$$setupUI$$$();
        setLayout(new BorderLayout());
        add(contentPane, BorderLayout.CENTER);
    }

    public PaginationPanel getPaginationPanel() {
        return paginationPanel;
    }

    public void addRow(BookDTO bookDTO) {
        booksDataTable.addRow(convertBaseShelfDto(bookDTO));
    }

    public void removeAllRows() {
        booksDataTable.removeAllData();
    }

    private String[] convertBaseShelfDto(BookDTO bookDTO) {
        return new String[]{
                String.valueOf(bookDTO.getId()),
                String.valueOf(booksDataTable.getRowCount() + 1),
                bookDTO.getName(),
                bookDTO.getAuthor(),
                bookDTO.getIsbn(),
                String.valueOf(bookDTO.getPageCount()),
                bookDTO.getPublisher(),
                String.valueOf(bookDTO.getTotalCount()),
                String.valueOf(bookDTO.getAvailableCount()),
                bookDTO.getLanguage(),
                bookDTO.getDescription()
        };
    }

    public void selected() {
        updateBooksDataTableTaskSupplier.run();
    }

    protected void setUpdateBooksDataTableTaskSupplier(TaskSupplier updateBooksDataTableTaskSupplier) {
        this.updateBooksDataTableTaskSupplier = updateBooksDataTableTaskSupplier;
    }

    public CustomDataTable getBooksDataTable() {
        return booksDataTable;
    }

    private void getUpdateBooksDataTableTaskSupplier() {
        this.updateBooksDataTableTaskSupplier.run();
    }

    public Long getShelfId() {
        return shelfId;
    }

    public void setShelfId(Long shelfId) {
        this.shelfId = shelfId;
    }

    //COMPONENTS
    private JPanel contentPane;
    private JPanel paginationPanelGUI;
    private JTable booksTableGUI;

    private void createUIComponents() {
        booksTableGUI = booksDataTable;
        paginationPanelGUI = paginationPanel;
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(paginationPanelGUI, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        contentPane.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(booksTableGUI);
        final Spacer spacer1 = new Spacer();
        contentPane.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
